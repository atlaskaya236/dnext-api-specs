{
  "swagger": "2.0",
  "info": {
    "description": "This is Swagger UI environment generated for the TMF Resource Inventory Management specification",
    "version": "4.0.0",
    "title": "Resource Inventory Management",
    "contact": {
      "name": "PiA(people in action)",
      "url": "http://www.pia-team.com/",
      "email": "info@pia-team.com"
    },
    "license": {
      "name": "PiA License",
      "url": "http://www.pia-team.com"
    }
  },
  "host": "sprint58-release-test.test.orbitant.dev",
  "basePath": "/api/resourceInventoryManagement/v4",
  "tags": [
    {
      "name": "hub",
      "description": "the hub API"
    },
    {
      "name": "resource",
      "description": "the resource API"
    }
  ],
  "paths": {
    "/hub": {
      "post": {
        "tags": [
          "events subscription",
          "hub"
        ],
        "summary": "Register a listener",
        "description": "Sets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "operationId": "registerListener",
        "consumes": [
          "application/json;charset=utf-8"
        ],
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "data",
            "description": "Data containing the callback endpoint to deliver the information",
            "required": true,
            "schema": {
              "$ref": "#/definitions/EventSubscriptionInput"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "201": {
            "description": "Subscribed",
            "schema": {
              "$ref": "#/definitions/EventSubscription"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false
      }
    },
    "/hub/{id}": {
      "delete": {
        "tags": [
          "events subscription",
          "hub"
        ],
        "summary": "Unregister a listener",
        "description": "Resets the communication endpoint address the service instance must use to deliver information about its health state, execution state, failures and metrics.",
        "operationId": "unregisterListener",
        "consumes": [
          "application/json;charset=utf-8"
        ],
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id of the registered listener",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false
      }
    },
    "/resource": {
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "List or find Resource objects",
        "description": "This operation list or find Resource entities",
        "operationId": "listResource",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated properties to be provided in response",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Requested number of resources to be provided in response",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "offset",
            "in": "query",
            "description": "Requested index for start of resources to be provided in response",
            "required": false,
            "type": "integer",
            "format": "int32",
            "allowEmptyValue": false
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort field of resources to be provided in response",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Resource"
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false
      },
      "post": {
        "tags": [
          "resource"
        ],
        "summary": "Creates a Resource",
        "description": "This operation creates a Resource entity.",
        "operationId": "createResource",
        "consumes": [
          "application/json;charset=utf-8"
        ],
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The Resource to be created",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceCreate"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found"
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false
      }
    },
    "/resource/{id}": {
      "get": {
        "tags": [
          "resource"
        ],
        "summary": "Retrieves a Resource by ID",
        "description": "This operation retrieves a Resource entity. Attribute selection is enabled for all first level attributes.",
        "operationId": "retrieveResource",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated properties to provide in response",
            "required": false,
            "type": "string",
            "allowEmptyValue": false
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false
      },
      "delete": {
        "tags": [
          "resource"
        ],
        "summary": "Deletes a Resource",
        "description": "This operation deletes a Resource entity.",
        "operationId": "deleteResource",
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "204": {
            "description": "Deleted"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false
      },
      "patch": {
        "tags": [
          "resource"
        ],
        "summary": "Updates partially a Resource",
        "description": "This operation updates partially a Resource entity.",
        "operationId": "patchResource_1",
        "consumes": [
          "application/merge-patch+json;charset=utf-8"
        ],
        "produces": [
          "application/json;charset=utf-8"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "The Resource to be updated",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResourceUpdate"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the Resource",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "401": {
            "description": "Unauthorized",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "405": {
            "description": "Method Not allowed",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "409": {
            "description": "Conflict",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/Error"
            }
          }
        },
        "deprecated": false
      }
    }
  },
  "definitions": {
    "AttachmentRefOrValue": {
      "type": "object",
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "attachmentType": {
          "type": "string",
          "description": "Attachment type such as video, picture"
        },
        "content": {
          "type": "string",
          "description": "The actual contents of the attachment object, if embedded, encoded as base64"
        },
        "description": {
          "type": "string",
          "description": "A narrative text describing the content of the attachment"
        },
        "href": {
          "type": "string",
          "description": "URI for this Attachment"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier for this particular attachment"
        },
        "mimeType": {
          "type": "string",
          "description": "Attachment mime type such as extension file for video, picture and document"
        },
        "name": {
          "type": "string",
          "description": "The name of the attachment"
        },
        "size": {
          "description": "The size of the attachment.",
          "$ref": "#/definitions/Quantity"
        },
        "url": {
          "type": "string",
          "description": "Uniform Resource Locator, is a web page address (a subset of URI)"
        },
        "validFor": {
          "description": "The period of time for which the attachment is valid",
          "$ref": "#/definitions/TimePeriod"
        }
      },
      "title": "AttachmentRefOrValue",
      "description": "An attachment by value or by reference. For AttachmentRefOrValue, the attribute type,schemaLocation and referredType are related to the contained entity and not to AttchmentRefOrValue itself"
    },
    "Characteristic": {
      "type": "object",
      "required": [
        "name",
        "value"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "characteristicRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/CharacteristicRelationship"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the characteristic"
        },
        "name": {
          "type": "string",
          "description": "Name of the characteristic"
        },
        "value": {
          "type": "string",
          "description": "The value of the characteristic"
        },
        "valueType": {
          "type": "string",
          "description": "Data type of the value of the characteristic"
        }
      },
      "title": "Characteristic",
      "description": "Describes a given characteristic of an object or entity through a name/value pair."
    },
    "CharacteristicRelationship": {
      "type": "object",
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the characteristic"
        },
        "relationshipType": {
          "type": "string",
          "description": "The type of relationship"
        }
      },
      "title": "CharacteristicRelationship",
      "description": "Another Characteristic that is related to the current Characteristic;"
    },
    "ConstraintRef": {
      "type": "object",
      "required": [
        "id"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@referredType": {
          "type": "string",
          "description": "The (class) type of the referred constraint"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "href": {
          "type": "string",
          "description": "Hyperlink reference to the target constraint"
        },
        "id": {
          "type": "string",
          "description": "reference id to the target constraint"
        },
        "name": {
          "type": "string",
          "description": "Name given to the constraint"
        },
        "version": {
          "type": "string",
          "description": "constraint version"
        }
      },
      "title": "ConstraintRef",
      "description": "Constraint reference. The Constraint resource represents a policy/rule applied to an entity or entity spec."
    },
    "Error": {
      "type": "object",
      "properties": {
        "@baseType": {
          "type": "string"
        },
        "@schemaLocation": {
          "type": "string"
        },
        "@type": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "message": {
          "type": "string"
        },
        "reason": {
          "type": "string"
        },
        "referenceError": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      },
      "title": "Error",
      "description": "Used when an API throws an Error, typically with a HTTP error response-code (3xx, 4xx, 5xx)"
    },
    "EventSubscription": {
      "type": "object",
      "required": [
        "callback",
        "id"
      ],
      "properties": {
        "callback": {
          "type": "string",
          "description": "The callback being registered."
        },
        "createdBy": {
          "type": "string",
          "description": "Name of created by user"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date of creation"
        },
        "id": {
          "type": "string",
          "description": "Id of the listener"
        },
        "query": {
          "type": "string",
          "description": "additional data to be passed"
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "Version number of the entity"
        },
        "updatedBy": {
          "type": "string",
          "description": "Name of updated by user"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time",
          "description": "Date of update"
        }
      },
      "title": "EventSubscription",
      "description": "Sets the communication endpoint address the service instance must use to deliver notification information"
    },
    "EventSubscriptionInput": {
      "type": "object",
      "required": [
        "callback"
      ],
      "properties": {
        "callback": {
          "type": "string",
          "description": "The callback being registered."
        },
        "query": {
          "type": "string",
          "description": "additional data to be passed"
        }
      },
      "title": "EventSubscriptionInput",
      "description": "Sets the communication endpoint address the service instance must use to deliver notification information"
    },
    "ExternalReference": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "externalReferenceType": {
          "type": "string",
          "description": "Type of the external reference"
        },
        "href": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "name": {
          "type": "string",
          "description": "External reference name"
        }
      },
      "title": "ExternalReference",
      "description": "External reference of the individual or reference in other system"
    },
    "Feature": {
      "type": "object",
      "required": [
        "featureCharacteristic",
        "name"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "constraint": {
          "type": "array",
          "description": "This is a list of feature constraints.",
          "items": {
            "$ref": "#/definitions/ConstraintRef"
          }
        },
        "featureBundle": {
          "type": "array",
          "description": "Bundled feature specification",
          "items": {
            "$ref": "#/definitions/FeatureBundle"
          }
        },
        "featureCharacteristic": {
          "type": "array",
          "description": "This is a list of Characteristics for a particular feature.",
          "items": {
            "$ref": "#/definitions/Characteristic"
          }
        },
        "featureRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureRelationship"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the feature."
        },
        "isBundle": {
          "type": "boolean",
          "description": "True if this is a feature group. Default is false."
        },
        "isEnabled": {
          "type": "boolean",
          "description": "True if this feature is enabled. Default is true."
        },
        "name": {
          "type": "string",
          "description": "This is the name for the feature."
        }
      },
      "title": "Feature",
      "description": "Configuration feature."
    },
    "FeatureBundle": {
      "type": "object",
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class Extensible name"
        },
        "href": {
          "type": "string",
          "description": "Unique reference of the FeatureBundle"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the FeatureBundle"
        },
        "lifecycleStatus": {
          "type": "string",
          "description": "Used to indicate the current lifecycle status"
        },
        "name": {
          "type": "string",
          "description": "Name of the FeatureBundle"
        }
      },
      "title": "FeatureBundle",
      "description": "A type of FeatureSpecification that belongs to a grouping of FeatureSpecifications made available to the market. It inherits of all attributes of FeatureSpecification."
    },
    "FeatureRelationship": {
      "type": "object",
      "required": [
        "name",
        "relationshipType"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the target feature."
        },
        "name": {
          "type": "string",
          "description": "This is the name of the target feature."
        },
        "relationshipType": {
          "type": "string",
          "description": "This is the type of the feature relationship."
        },
        "validFor": {
          "description": "The period for which this feature relationship is valid.",
          "$ref": "#/definitions/TimePeriod"
        }
      },
      "title": "FeatureRelationship",
      "description": "Configuration feature"
    },
    "LogicalResourceCreate": {
      "title": "LogicalResourceCreate",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceCreate"
        },
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "@baseType": {
              "type": "string",
              "description": "When sub-classing, this defines the super-class"
            },
            "@referredType": {
              "type": "string",
              "description": "The actual type of the target instance when needed for disambiguation."
            },
            "@schemaLocation": {
              "type": "string",
              "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
            },
            "@type": {
              "type": "string",
              "description": "When sub-classing, this defines the sub-class entity name"
            },
            "activationFeature": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Feature"
              }
            },
            "administrativeState": {
              "type": "string",
              "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
            },
            "attachment": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttachmentRefOrValue"
              }
            },
            "category": {
              "type": "string",
              "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
            },
            "description": {
              "type": "string",
              "description": "free-text description of the resource"
            },
            "endOperatingDate": {
              "type": "string",
              "format": "date-time",
              "description": "A date time( DateTime). The date till the resource is operating"
            },
            "externalReference": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalReference"
              }
            },
            "id": {
              "type": "string",
              "description": "Unique identifier of the account"
            },
            "name": {
              "type": "string",
              "description": "A string used to give a name to the resource"
            },
            "note": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Note"
              }
            },
            "operationalState": {
              "type": "string",
              "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
            },
            "place": {
              "$ref": "#/definitions/RelatedPlaceRefOrValue"
            },
            "relatedParty": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelatedParty"
              }
            },
            "resourceCharacteristic": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Characteristic"
              }
            },
            "resourceOrderItem": {
              "type": "array",
              "description": "A list of resource order items related to this resource",
              "items": {
                "$ref": "#/definitions/RelatedResourceOrderItem"
              }
            },
            "resourceRelationship": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceRelationship"
              }
            },
            "resourceSpecification": {
              "$ref": "#/definitions/ResourceSpecificationRef"
            },
            "resourceStatus": {
              "type": "string",
              "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
            },
            "resourceVersion": {
              "type": "string",
              "description": "A field that identifies the specific version of an instance of a resource."
            },
            "startOperatingDate": {
              "type": "string",
              "format": "date-time",
              "description": "A date time( DateTime). The date from which the resource is operating"
            },
            "statusReason": {
              "type": "string",
              "description": "Reason explanation of the product status"
            },
            "usageState": {
              "type": "string",
              "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
            },
            "value": {
              "type": "string",
              "description": "the value of the logical resource. E.g '0746712345' for  MSISDN's"
            }
          },
          "title": "LogicalResourceCreate",
          "description": "Logical Resource entity"
        }
      ],
      "description": "Logical Resource entity"
    },
    "Note": {
      "type": "object",
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "author": {
          "type": "string",
          "description": "Author of the note"
        },
        "date": {
          "type": "string",
          "format": "date-time",
          "description": "Date of the note"
        },
        "id": {
          "type": "string",
          "description": "Identifier of the note within its containing entity (may or may not be globally unique, depending on provider implementation)"
        },
        "text": {
          "type": "string",
          "description": "Text of the note"
        }
      },
      "title": "Note",
      "description": "Extra information about a given entity"
    },
    "PhysicalResourceCreate": {
      "title": "PhysicalResourceCreate",
      "allOf": [
        {
          "$ref": "#/definitions/ResourceCreate"
        },
        {
          "type": "object",
          "required": [
            "name"
          ],
          "properties": {
            "@baseType": {
              "type": "string",
              "description": "When sub-classing, this defines the super-class"
            },
            "@referredType": {
              "type": "string",
              "description": "The actual type of the target instance when needed for disambiguation."
            },
            "@schemaLocation": {
              "type": "string",
              "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
            },
            "@type": {
              "type": "string",
              "description": "When sub-classing, this defines the sub-class entity name"
            },
            "activationFeature": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Feature"
              }
            },
            "administrativeState": {
              "type": "string",
              "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
            },
            "attachment": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AttachmentRefOrValue"
              }
            },
            "category": {
              "type": "string",
              "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
            },
            "description": {
              "type": "string",
              "description": "free-text description of the resource"
            },
            "endOperatingDate": {
              "type": "string",
              "format": "date-time",
              "description": "A date time( DateTime). The date till the resource is operating"
            },
            "externalReference": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ExternalReference"
              }
            },
            "id": {
              "type": "string",
              "description": "Unique identifier of the account"
            },
            "manufactureDate": {
              "type": "string",
              "format": "date-time",
              "description": "This is a string attribute that defines the date of manufacture of this item in the fixed format \"dd/mm/yyyy\". This is an optional attribute."
            },
            "name": {
              "type": "string",
              "description": "A string used to give a name to the resource"
            },
            "note": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Note"
              }
            },
            "operationalState": {
              "type": "string",
              "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
            },
            "place": {
              "$ref": "#/definitions/RelatedPlaceRefOrValue"
            },
            "powerState": {
              "type": "string",
              "description": "This defines the current power status of the hardware item. Values include:    0:  Unknown   1:  Not Applicable   2:  No Power Applied   3: Full Power Applied   4:  Power Save - Normal   5:  Power Save - Degraded   6:  Power Save - Standby   7:  Power Save - Critical   8:  Power Save - Low Power Mode   9:  Power Save - Unknown  10: Power Cycle  11: Power Warning  12: Power Off"
            },
            "relatedParty": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/RelatedParty"
              }
            },
            "resourceCharacteristic": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Characteristic"
              }
            },
            "resourceOrderItem": {
              "type": "array",
              "description": "A list of resource order items related to this resource",
              "items": {
                "$ref": "#/definitions/RelatedResourceOrderItem"
              }
            },
            "resourceRelationship": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResourceRelationship"
              }
            },
            "resourceSpecification": {
              "$ref": "#/definitions/ResourceSpecificationRef"
            },
            "resourceStatus": {
              "type": "string",
              "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
            },
            "resourceVersion": {
              "type": "string",
              "description": "A field that identifies the specific version of an instance of a resource."
            },
            "serialNumber": {
              "type": "string",
              "description": "This is a string that represents a manufacturer-allocated number used to identify different instances of the same hardware item. The ModelNumber and PartNumber attributes are used to identify different types of hardware items. This is a REQUIRED attribute."
            },
            "startOperatingDate": {
              "type": "string",
              "format": "date-time",
              "description": "A date time( DateTime). The date from which the resource is operating"
            },
            "statusReason": {
              "type": "string",
              "description": "Reason explanation of the product status"
            },
            "usageState": {
              "type": "string",
              "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
            },
            "versionNumber": {
              "type": "string",
              "description": "This is a string that identifies the version of this physical resource. This is an optional attribute."
            }
          },
          "title": "PhysicalResourceCreate",
          "description": "Pyhsical Resource entity"
        }
      ],
      "description": "Pyhsical Resource entity"
    },
    "Quantity": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "number",
          "format": "float",
          "description": "Numeric value in a given unit"
        },
        "units": {
          "type": "string",
          "description": "Unit"
        }
      },
      "title": "Quantity",
      "description": "An amount in a given unit"
    },
    "RelatedParty": {
      "type": "object",
      "required": [
        "@referredType",
        "id"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "href": {
          "type": "string",
          "description": "Reference of the related entity."
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of a related entity."
        },
        "name": {
          "type": "string",
          "description": "Name of the related entity."
        },
        "role": {
          "type": "string",
          "description": "Role played by the related party"
        }
      },
      "title": "RelatedParty",
      "description": "Related Entity reference. A related party defines party or party role linked to a specific entity."
    },
    "RelatedPlaceRefOrValue": {
      "type": "object",
      "required": [
        "href",
        "id",
        "role"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "href": {
          "type": "string",
          "description": "Unique reference of the place"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the place"
        },
        "name": {
          "type": "string",
          "description": "A user-friendly name for the place, such as \"Paris Store\", \"London Store\", \"Main Home\""
        },
        "role": {
          "type": "string"
        }
      },
      "title": "RelatedPlaceRefOrValue",
      "description": "Related Entity reference. A related place defines a place described by reference or by value linked to a specific entity. The polymorphic attributes @type, @schemaLocation & @referredType are related to the place entity and not the RelatedPlaceRefOrValue class itself"
    },
    "RelatedResourceOrderItem": {
      "type": "object",
      "required": [
        "itemId",
        "resourceOrderId"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "itemAction": {
          "type": "string",
          "description": "Action of the order item for this resource",
          "enum": [
            "add",
            "modify",
            "delete",
            "noChange",
            "statusChange.Suspend",
            "statusChange.Resume",
            "modify.Migration",
            "modify.Takeover",
            "modify.Relocation"
          ]
        },
        "itemId": {
          "type": "string",
          "description": "Identifier of the order item where the resource was managed"
        },
        "resourceOrderHref": {
          "type": "string",
          "description": "Reference of the related entity."
        },
        "resourceOrderId": {
          "type": "string",
          "description": "Unique identifier of a related entity."
        },
        "role": {
          "type": "string",
          "description": "Role of the resource order item for this resource"
        }
      },
      "title": "RelatedResourceOrderItem",
      "description": "RelatedResourceOrderItem (a ResourceOrder item) .The resource order item which triggered resource creation/change/termination."
    },
    "Resource": {
      "type": "object",
      "required": [
        "href",
        "id"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "activationFeature": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          }
        },
        "administrativeState": {
          "type": "string"
        },
        "attachment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentRefOrValue"
          }
        },
        "category": {
          "type": "string",
          "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "free-text description of the resource"
        },
        "endOperatingDate": {
          "type": "string",
          "format": "date-time",
          "description": "A date time( DateTime). The date till the resource is operating"
        },
        "externalReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "href": {
          "type": "string",
          "description": "The URI for the object itself."
        },
        "id": {
          "type": "string",
          "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
        },
        "name": {
          "type": "string",
          "description": "A string used to give a name to the resource"
        },
        "note": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        },
        "operationalState": {
          "type": "string"
        },
        "place": {
          "$ref": "#/definitions/RelatedPlaceRefOrValue"
        },
        "relatedParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          }
        },
        "resourceCharacteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          }
        },
        "resourceOrderItem": {
          "type": "array",
          "description": "A list of resource order items related to this resource",
          "items": {
            "$ref": "#/definitions/RelatedResourceOrderItem"
          }
        },
        "resourceRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRelationship"
          }
        },
        "resourceSpecification": {
          "$ref": "#/definitions/ResourceSpecificationRef"
        },
        "resourceStatus": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string",
          "description": "A field that identifies the specific version of an instance of a resource."
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "Version number of the entity"
        },
        "startOperatingDate": {
          "type": "string",
          "format": "date-time",
          "description": "A date time( DateTime). The date from which the resource is operating"
        },
        "statusReason": {
          "type": "string",
          "description": "Reason explanation of the product status"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "usageState": {
          "type": "string"
        }
      },
      "title": "Resource",
      "description": "Resource is an abstract entity that describes the common set of attributes shared by all concrete resources (e.g. TPE, EQUIPMENT) in the inventory."
    },
    "ResourceCreate": {
      "type": "object",
      "required": [
        "name"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "activationFeature": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          }
        },
        "administrativeState": {
          "type": "string",
          "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
        },
        "attachment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentRefOrValue"
          }
        },
        "category": {
          "type": "string",
          "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
        },
        "description": {
          "type": "string",
          "description": "free-text description of the resource"
        },
        "endOperatingDate": {
          "type": "string",
          "format": "date-time",
          "description": "A date time( DateTime). The date till the resource is operating"
        },
        "externalReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the account"
        },
        "name": {
          "type": "string",
          "description": "A string used to give a name to the resource"
        },
        "note": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        },
        "operationalState": {
          "type": "string",
          "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
        },
        "place": {
          "$ref": "#/definitions/RelatedPlaceRefOrValue"
        },
        "relatedParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          }
        },
        "resourceCharacteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          }
        },
        "resourceOrderItem": {
          "type": "array",
          "description": "A list of resource order items related to this resource",
          "items": {
            "$ref": "#/definitions/RelatedResourceOrderItem"
          }
        },
        "resourceRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRelationship"
          }
        },
        "resourceSpecification": {
          "$ref": "#/definitions/ResourceSpecificationRef"
        },
        "resourceStatus": {
          "type": "string",
          "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
        },
        "resourceVersion": {
          "type": "string",
          "description": "A field that identifies the specific version of an instance of a resource."
        },
        "startOperatingDate": {
          "type": "string",
          "format": "date-time",
          "description": "A date time( DateTime). The date from which the resource is operating"
        },
        "statusReason": {
          "type": "string",
          "description": "Reason explanation of the product status"
        },
        "usageState": {
          "type": "string",
          "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
        }
      },
      "title": "ResourceCreate",
      "description": "Resource is an abstract entity that describes the common set of attributes shared by all concrete resources (e.g. TPE, EQUIPMENT) in the inventory. Skipped properties: id,href"
    },
    "ResourceRefOrValue": {
      "type": "object",
      "required": [
        "href",
        "id"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "activationFeature": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          }
        },
        "administrativeState": {
          "type": "string",
          "enum": [
            "locked",
            "unlocked",
            "shutdown"
          ]
        },
        "attachment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentRefOrValue"
          }
        },
        "category": {
          "type": "string",
          "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
        },
        "createdBy": {
          "type": "string"
        },
        "createdDate": {
          "type": "string",
          "format": "date-time"
        },
        "description": {
          "type": "string",
          "description": "free-text description of the resource"
        },
        "endOperatingDate": {
          "type": "string",
          "format": "date-time",
          "description": "A date time( DateTime). The date till the resource is operating"
        },
        "href": {
          "type": "string",
          "description": "The URI for the object itself."
        },
        "id": {
          "type": "string",
          "description": "Identifier of an instance of the resource. Required to be unique within the resource type.  Used in URIs as the identifier for specific instances of a type."
        },
        "name": {
          "type": "string",
          "description": "A string used to give a name to the resource"
        },
        "note": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        },
        "operationalState": {
          "type": "string",
          "enum": [
            "enable",
            "disable"
          ]
        },
        "place": {
          "$ref": "#/definitions/RelatedPlaceRefOrValue"
        },
        "relatedParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          }
        },
        "resourceCharacteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          }
        },
        "resourceOrderItem": {
          "type": "array",
          "description": "A list of resource order items related to this resource",
          "items": {
            "$ref": "#/definitions/RelatedResourceOrderItem"
          }
        },
        "resourceRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRelationship"
          }
        },
        "resourceSpecification": {
          "$ref": "#/definitions/ResourceSpecificationRef"
        },
        "resourceStatus": {
          "type": "string"
        },
        "resourceVersion": {
          "type": "string",
          "description": "A field that identifies the specific version of an instance of a resource."
        },
        "revision": {
          "type": "integer",
          "format": "int64",
          "description": "Version number of the entity"
        },
        "startOperatingDate": {
          "type": "string",
          "format": "date-time",
          "description": "A date time( DateTime). The date from which the resource is operating"
        },
        "statusReason": {
          "type": "string",
          "description": "Reason explanation of the product status"
        },
        "updatedBy": {
          "type": "string"
        },
        "updatedDate": {
          "type": "string",
          "format": "date-time"
        },
        "usageState": {
          "type": "string",
          "enum": [
            "idle",
            "active",
            "busy"
          ]
        }
      },
      "title": "ResourceRefOrValue"
    },
    "ResourceRelationship": {
      "type": "object",
      "required": [
        "resource"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "relationshipType": {
          "type": "string"
        },
        "resource": {
          "$ref": "#/definitions/ResourceRefOrValue"
        }
      },
      "title": "ResourceRelationship"
    },
    "ResourceSpecificationRef": {
      "type": "object",
      "required": [
        "href",
        "id"
      ],
      "properties": {
        "@baseType": {
          "type": "string",
          "description": "When sub-classing, this defines the super-class"
        },
        "@referredType": {
          "type": "string",
          "description": "The actual type of the target instance when needed for disambiguation."
        },
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "@type": {
          "type": "string",
          "description": "When sub-classing, this defines the sub-class entity name"
        },
        "href": {
          "type": "string",
          "description": "Reference of the resource specification"
        },
        "id": {
          "type": "string",
          "description": "Unique identifier of the resource specification"
        },
        "name": {
          "type": "string",
          "description": "Name of the requiredResourceSpecification"
        },
        "version": {
          "type": "string",
          "description": "Resource specification version"
        }
      },
      "title": "ResourceSpecificationRef",
      "description": "Resource Specification reference: The ResourceSpecification is required to realize a ProductSpecification."
    },
    "ResourceUpdate": {
      "type": "object",
      "properties": {
        "@schemaLocation": {
          "type": "string",
          "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
        },
        "activationFeature": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Feature"
          }
        },
        "administrativeState": {
          "type": "string",
          "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
        },
        "attachment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AttachmentRefOrValue"
          }
        },
        "category": {
          "type": "string",
          "description": "Category of the concrete resource. e.g Gold, Silver for MSISDN concrete resource"
        },
        "description": {
          "type": "string",
          "description": "free-text description of the resource"
        },
        "endOperatingDate": {
          "type": "string",
          "format": "date-time",
          "description": "A date time( DateTime). The date till the resource is operating"
        },
        "externalReference": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExternalReference"
          }
        },
        "name": {
          "type": "string",
          "description": "A string used to give a name to the resource"
        },
        "note": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Note"
          }
        },
        "operationalState": {
          "type": "string",
          "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
        },
        "place": {
          "$ref": "#/definitions/RelatedPlaceRefOrValue"
        },
        "relatedParty": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RelatedParty"
          }
        },
        "resourceCharacteristic": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Characteristic"
          }
        },
        "resourceOrderItem": {
          "type": "array",
          "description": "A list of resource order items related to this resource",
          "items": {
            "$ref": "#/definitions/RelatedResourceOrderItem"
          }
        },
        "resourceRelationship": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ResourceRelationship"
          }
        },
        "resourceSpecification": {
          "$ref": "#/definitions/ResourceSpecificationRef"
        },
        "resourceStatus": {
          "type": "string",
          "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
        },
        "resourceVersion": {
          "type": "string",
          "description": "A field that identifies the specific version of an instance of a resource."
        },
        "startOperatingDate": {
          "type": "string",
          "format": "date-time",
          "description": "A date time( DateTime). The date from which the resource is operating"
        },
        "statusReason": {
          "type": "string",
          "description": "Reason explanation of the product status"
        },
        "usageState": {
          "type": "string",
          "description": "Tracks the lifecycle status of the resource, such as planning, installing, opereating, retiring and so on."
        }
      },
      "title": "ResourceUpdate",
      "description": "Resource is an abstract entity that describes the common set of attributes shared by all concrete resources (e.g. TPE, EQUIPMENT) in the inventory. Skipped properties: id,href"
    },
    "TimePeriod": {
      "type": "object",
      "properties": {
        "endDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "End of the time period, using IETC-RFC-3339 format"
        },
        "startDateTime": {
          "type": "string",
          "format": "date-time",
          "description": "Start of the time period, using IETC-RFC-3339 format. If you define a start, you must also define an end"
        }
      },
      "title": "TimePeriod",
      "description": "A period of time, either as a deadline (endDateTime only) a startDateTime only, or both"
    }
  }
}