{
    "swagger": "2.0",
    "info": {
        "description": "The Data History Management API",
        "version": "4.0.0",
        "title": "Data History Management",
        "contact": {
            "name": "PiA(people in action)",
            "url": "http://www.pia-team.com/",
            "email": "info@pia-team.com"
        }
    },
    "basePath": "/api/historyManagement/v1",
    "schemes": [
        "https"
    ],
    "consumes": [
        "application/json;charset=utf-8"
    ],
    "produces": [
        "application/json;charset=utf-8"
    ],
    "tags": [
        {
            "name": "history",
            "description": "History Api Controller"
        }
    ],
    "paths": {
        "/history": {
            "get": {
                "tags": [
                    "history"
                ],
                "summary": "List Entity History Ref objects",
                "description": "This operation list Entity History Ref entities",
                "operationId": "listEntityHistoryRef",
                "parameters": [
                    {
                        "name": "fields",
                        "in": "query",
                        "description": "Comma-separated properties to be provided in response",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Requested number of resources to be provided in response",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Requested index for start of resources to be provided in response",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "sort",
                        "in": "query",
                        "description": "Comma-separated properties to sort fields in response",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "X-Result-Count": {
                                "description": "Actual number of items returned in the response body",
                                "type": "integer"
                            },
                            "X-Total-Count": {
                                "description": "Total number of items matching criteria",
                                "type": "integer"
                            }
                        },
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EntityHistoryRef"
                            }
                        }
                    },
                    "206": {
                        "description": "Partial Content",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EntityHistoryRef"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "405": {
                        "description": "Method Not allowed",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/Error"
                        }
                    }
                },
                "deprecated": false
            }
        }
    },
    "definitions": {
        "Error": {
            "type": "object",
            "properties": {
                "baseType": {
                    "type": "string"
                },
                "code": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "reason": {
                    "type": "string"
                },
                "referenceError": {
                    "type": "string"
                },
                "schemaLocation": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "title": "Error"
        },
        "EntityHistoryRef": {
            "type": "object",
            "properties": {
                "@baseType": {
                    "type": "string",
                    "description": "This module doesn’t support polymorphism. Always “EntityHistoryRef”"
                },
                "@schemaLocation": {
                    "type": "string",
                    "description": "A URI to a JSON-Schema file that defines additional attributes and relationships"
                },
                "@type": {
                    "type": "string",
                    "description": "This module doesn’t support polymorphism. Always “EntityHistoryRef”"
                },
                "@referredType": {
                    "type": "string",
                    "description": "The type of the entity contained in eventPayload field. It is the same as eventPayload.@type when payload is present."
                },
                "revisionId": {
                    "type": "string",
                    "description": "A revision identifier of the entity. The pair (<id>, <revisionId>) uniquely identifies a particular revision of an entity."
                },
                "href": {
                    "type": "string",
                    "description": "Hyperlink (URI) to access the latest version of the referred entity."
                },
                "id": {
                    "type": "string",
                    "description": "Entity ID of the referred entity"
                },
                "lastModified": {
                    "type": "string",
                    "format": "date-time",
                    "description": "The timestamp of the modification date of the entity. It is in ISO-8601 format (with time and time zone) at GMT."
                },
                "modifiedBy": {
                    "type": "string",
                    "description": "The user identifier obtained from the token that was used for updating the modification. It may be absent if anonymous access to systems are allowed."
                },
                "eventId": {
                    "type": "string",
                    "description": "A unique event identifier that may be used for correlating with other databases generated from the same event stream."
                },
                "eventType": {
                    "type": "string",
                    "description": "he type of event that was raised when entity was modified (e.g. ProductInventoryCreateEvent)"
                },
                "eventPayload": {
                    "type": "string",
                    "description": "The value of the resource after the modification. This field is absent for queries that return a list with more than one elements."
                }
            },
            "description": "This resource is used to manage history management request and response"
        }
    }
}
